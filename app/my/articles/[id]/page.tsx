import DownloadFile from "@/app/articles/_components/DownloadFile";
import PinArticleButton from "@/app/articles/_components/PinArticleButton";
import DeleteItemButton from "@/app/components/DeleteItemButton";
import EditItemButton from "@/app/components/EditItemButton";
import GoBack from "@/app/components/GoBack";
import { fetchApi } from "@/app/utils/fetchInterceptor";
import {
	AspectRatio,
	Badge,
	Box,
	Card,
	Container,
	Flex,
	Grid,
	Heading,
	Separator,
	Text,
} from "@radix-ui/themes";
import React, { Suspense } from "react";

const MyArticlePage = async ({
	params,
}: {
	params: Promise<{ id: string }>;
}) => {
	const id = (await params).id;
	const article = await fetchApi(`/my/articles/${id}`);
	return (
		<Container my={{ initial: "0", md: "5" }} p={{ initial: "4", md: "0" }}>
			<Flex justify="end" mb="3">
				<GoBack />
			</Flex>
			<Grid columns={{ initial: "1", md: "3" }} mt="6" gap="5">
				<Box className="col-span-2" mr="3">
					<Suspense>
						<AspectRatio ratio={9 / 3}>
							<img
								src={`data:image/jpeg;base64, ${article.cover}`}
								style={{
									objectFit: "cover",
									width: "100%",
									height: "100%",
									borderRadius: "5px",
								}}
							/>
						</AspectRatio>
					</Suspense>
					<Flex my="5" direction="column" gap="5">
						<Flex
							justify="between"
							direction={{ initial: "column", md: "row" }}
							gap={{ initial: "3", md: "0" }}
						>
							<Flex>
								<PinArticleButton articleId={article.id} />
								<Heading>{article.title}</Heading>
							</Flex>
						</Flex>
						<Text as="p">{article.description}</Text>
					</Flex>
					<Flex gap="3" direction="column">
						{article.internalUseOnly && (
							<Flex direction="column">
								<Separator my="3" size="4" />
								<Flex>
									<Badge color="orange" mr="2">
										Warning
									</Badge>
									<Text>This article is for internal use only</Text>
								</Flex>
							</Flex>
						)}
						{/* {article.aiGenerated && (
							<Flex direction="column">
								<Flex>
									<Badge color="green" mr="2">
										AI
									</Badge>
									<Text>This article was generated by AI</Text>
								</Flex>
							</Flex>
						)} */}
					</Flex>
				</Box>
				<Box>
					<Card className="shadow-lg mb-5">
						<Box p="3">
							<Flex justify={"between"}>
								<Heading size="2">Business Units</Heading>
								<Flex gap="3">
									{article.articleBusinessUnits.length === 0 && (
										<Badge color="gray">Valid for all BU</Badge>
									)}
									{article.articleBusinessUnits.map((bu) => (
										<Badge key={bu.id} color="gray">
											{bu.businessUnit.name}
										</Badge>
									))}
								</Flex>
							</Flex>
							<Separator my="3" size="4" />

							<Flex justify={"between"}>
								<Heading size="2">Regions</Heading>
								<Flex gap="3">
									{article.articleRegions.length === 0 && (
										<Badge color="grass">Valid for all Regions</Badge>
									)}
									{article.articleRegions.map((r) => (
										<Badge key={r.id} color="grass">
											{r.region.name}
										</Badge>
									))}
								</Flex>
							</Flex>

							<Separator my="3" size="4" />

							<Flex justify={"between"} direction={"row"}>
								<Heading mb="3" size="2">
									Courses
								</Heading>
								<Flex gap="3">
									{article.articleCourses.length === 0 && (
										<Badge color="gray">Not includes in any course</Badge>
									)}
									{article.articleCourses.map((c) => (
										<Badge key={c.id} color="gold">
											{c.course.name}
										</Badge>
									))}
								</Flex>
							</Flex>
						</Box>
					</Card>
					<Card className="shadow-lg">
						<Box p="3">
							<Flex justify={"between"}>
								<Heading size="2">Duration</Heading>
								<Text>{article.duration} pages</Text>
							</Flex>

							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Media</Heading>
								<Text>{article.media.name}</Text>
							</Flex>
							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Source</Heading>
								<Text>{article.source.name}</Text>
							</Flex>
							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Educational Framework</Heading>
								<Text>{article.educationalFramework.name}</Text>
							</Flex>
							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Educational Methodology</Heading>
								<Text>{article.educationalMethodology.name}</Text>
							</Flex>
							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Educational Tool</Heading>
								<Text>{article.educationalTool.name}</Text>
							</Flex>

							<Flex minWidth={"100%"} mt="5">
								<DownloadFile articleId={article.id} />
							</Flex>
						</Box>
					</Card>
				</Box>
			</Grid>
			<Separator my="4" size="4" />
			{/* <Flex>
				<ArticleRelevanceForJobTitleSkills
					article={article}
					jobTitles={jobTitles}
					jobTitleSkills={jobTitleSkills}
				/>
			</Flex> */}
		</Container>
	);
};

export default MyArticlePage;
