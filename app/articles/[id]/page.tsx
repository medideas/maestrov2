import {
	Flex,
	Container,
	Grid,
	Box,
	Card,
	Heading,
	Text,
	Separator,
	Badge,
	Button,
	AspectRatio,
	Dialog,
} from "@radix-ui/themes";
import React, { Suspense } from "react";
import Link from "next/link";
import { isAuthorized } from "@/app/utils/roleRules";
import DeleteArticleButton from "../_components/DeleteArticleButton";
import fetchInterceptor from "@/app/utils/fetchInterceptor";
import DownloadFile from "../_components/DownloadFile";
import LoadingArticle from "./loading";

const ArticlePage = async (props: { params: Promise<{ id: string }> }) => {
	// await new Promise((resolve) => setTimeout(resolve, 2000));
	const params = await props.params;
	const id = params.id;
	const article = await fetchInterceptor(
		`${process.env.NEXT_PUBLIC_APIBASE}/articles/${id}`
	);
	return (
		<Container my={{ initial: "0", md: "5" }} p={{ initial: "4", md: "0" }}>
			<Flex justify="end" mb="3">
				<Link href="/articles">Go back to articles</Link>
			</Flex>
			<Suspense>
				<AspectRatio ratio={6 / 3}>
					<img
						src={`data:image/jpeg;base64, ${article.cover}`}
						style={{
							objectFit: "cover",
							width: "100%",
							height: "100%",
							borderRadius: "5px",
						}}
					/>
				</AspectRatio>
			</Suspense>
			<Grid columns={{ initial: "1", md: "3" }} mt="5">
				<Box className="col-span-2" mr="3">
					<Flex mb="5" direction="column" gap="3">
						<Flex
							justify="between"
							direction={{ initial: "column", md: "row" }}
							gap={{ initial: "3", md: "0" }}
						>
							<Heading>{article.title}</Heading>
							{isAuthorized() && (
								<Flex gap="3">
									<Link href={`/articles/${article.id}/edit`}>
										<Button>Edit article</Button>
									</Link>
									<Dialog.Root>
										<Dialog.Trigger>
											<Button variant="outline">Delete Article</Button>
										</Dialog.Trigger>
										<Dialog.Content maxWidth="800px">
											<Dialog.Title>
												Delete "{article.title}" article
											</Dialog.Title>
											<Flex direction="column" gap="3">
												<Text>
													Are you sure you want to delete this article? This
													action cannot be undone.
												</Text>
												<DeleteArticleButton articleId={article.id} />
											</Flex>
										</Dialog.Content>
									</Dialog.Root>
								</Flex>
							)}
						</Flex>
						<Text as="p">{article.description}</Text>
					</Flex>
					<Flex gap="3" direction="column">
						{article.internalUseOnly && (
							<Flex direction="column">
								<Separator my="3" size="4" />
								<Flex>
									<Badge color="orange" mr="2">
										Warning
									</Badge>
									<Text>This article is for internal use only</Text>
								</Flex>
							</Flex>
						)}
						{article.aiGenerated && (
							<Flex direction="column">
								<Flex>
									<Badge color="green" mr="2">
										AI
									</Badge>
									<Text>This article was generated by AI</Text>
								</Flex>
							</Flex>
						)}
					</Flex>
				</Box>
				<Box>
					<Card className="shadow-lg">
						<Box p="3">
							<Heading size="2">Duration</Heading>
							<Text>{article.duration}</Text>

							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Media</Heading>
								<Text>{article.media.name}</Text>
							</Flex>
							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Source</Heading>
								<Text>{article.source.name}</Text>
							</Flex>
							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Educational Framework</Heading>
								<Text>{article.educationalFramework.name}</Text>
							</Flex>
							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Educational Methodology</Heading>
								<Text>{article.educationalMethodology.name}</Text>
							</Flex>
							<Separator my="3" size="4" />
							<Flex justify="between">
								<Heading size="2">Educational Tool</Heading>
								<Text>{article.educationalTool.name}</Text>
							</Flex>

							<Separator my="3" size="4" />
							<Flex>
								<DownloadFile articleId={article.id} />
							</Flex>
						</Box>
					</Card>
				</Box>
			</Grid>
		</Container>
	);
};

export default ArticlePage;
